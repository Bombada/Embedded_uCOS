#include "includes.h"
#include <time.h>

#define TASK_STK_SIZE 512
#define N_TASKS	2	// number of total Tasks 
#define	N_MSG	100 //Messages in Queue


OS_STK TaskStk[N_TASKS][TASK_STK_SIZE]; // Task Stack Memory 지정
OS_STK LogTaskStk[TASK_STK_SIZE];


OS_EVENT	*msg_q; //message queue
void *msg_array[N_MSG];// Message pointer array


void LogTask(void *data);
void Task(void *data);
void CreateTasks(void);// create tasks


int main(void)
{
	OSInit(); // uC/OS-II 초기화
	CreateTasks();//create Tasks  테스크 생성 (적어도 1개 이상)
	msg_q = OSQCreate(msg_array, (INT16U)N_MSG);//메시지 큐 생성

	if (msg_q == 0) {//Msg q ERROR
		printf("creating msg_q is failed\n");
		return -1;
	}

	OSStart(); // 멀티 테스킹 시작
	return 0;
}
void CreateTasks(void) {// create tasks
	OSTaskCreate(LogTask, (void*)0, &LogTaskStk[TASK_STK_SIZE - 1], (INT8U)(0));
	OSTaskCreate(Task, (void*)0, &TaskStk[0][TASK_STK_SIZE - 1], (INT8U)(10));// Prio 10
	OSTaskCreate(Task, (void*)0, &TaskStk[1][TASK_STK_SIZE - 1], (INT8U)(20));//Prio 20
}
void LogTask(void *data) {
	FILE *log;
	void *msg;
	INT8U err;

	log = fopen("log.txt", "w");

	for (;;) {
		msg = OSQPend(msg_q, 0, &err);
		if (msg != 0) {
			fprintf(log, "%s", msg);
			fflush(log);
		}
	}
}
void Task(void *data) {
	INT8U sleep, err;
	char msg[100];

	srand(time((unsigned int*) 0) + (OSTCBCur->OSTCBPrio));

	for (;;) {
		sprintf(msg, "%4u: Task %u schedule\n", OSTimeGet(), OSTCBCur->OSTCBPrio);
		err = OSQPost(msg_q, msg);
		while (err != OS_NO_ERR) {
			err = OSQPost(msg_q, msg);
		}
		sleep = (rand() % 5) + 1;
		OSTimeDly(sleep);
	}
}

